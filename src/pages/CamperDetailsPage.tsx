import React, { useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';
import { useDispatch, useSelector } from 'react-redux';
import { fetchCamperDetails, clearCamperDetails } from '../redux/camperDetails/camperDetailsSlice';
import { AppDispatch, RootState } from '../redux/store';
import ErrorBlock from '../components/ErrorBlock';
import { TEXTS } from '../config/textsConfig';
import CamperFeatures from '../components/CamperFeatures/CamperFeatures';
import CamperReviews from '../components/CamperReviews/CamperReviews';
import CamperGallery from '../components/CamperGallery/CamperGallery';
import BookingForm from '../components/BookingForm/BookingForm';

const CamperDetailsPage: React.FC = () => {
  const { id } = useParams<{ id: string }>();
  const dispatch = useDispatch<AppDispatch>();
  const [activeTab, setActiveTab] = useState<'features' | 'reviews'>('features');

  // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ Redux —Å—Ç–∞–Ω –∑–∞–º—ñ—Å—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ
  const { camper, loading, error } = useSelector((state: RootState) => state.camperDetails);

  useEffect(() => {
    if (!id) {
      return;
    }

    // –û—á–∏—â—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –¥–∞–Ω—ñ –ø—Ä–∏ –∑–º—ñ–Ω—ñ ID
    dispatch(clearCamperDetails());

    // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ —á–µ—Ä–µ–∑ Redux
    dispatch(fetchCamperDetails(id));
  }, [dispatch, id]);

  // –û—á–∏—â—É—î–º–æ –¥–∞–Ω—ñ –ø—Ä–∏ –¥–µ–º–æ–Ω—Ç–∞–∂—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    return () => {
      dispatch(clearCamperDetails());
    };
  }, [dispatch]);

  const handleRetry = () => {
    if (id) {
      dispatch(fetchCamperDetails(id));
    }
  };

  // –û–±—Ä–æ–±–∫–∞ –≤—ñ–¥—Å—É—Ç–Ω–æ—Å—Ç—ñ ID
  if (!id) {
    return <ErrorBlock message={TEXTS.errors.notFound} />;
  }

  // –û–±—Ä–æ–±–∫–∞ —Å—Ç–∞–Ω—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
  if (loading) {
    return <p>{TEXTS.loading.initial}</p>;
  }

  // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
  if (error) {
    return <ErrorBlock message={error} onRetry={handleRetry} />;
  }

  // –û–±—Ä–æ–±–∫–∞ –≤—ñ–¥—Å—É—Ç–Ω–æ—Å—Ç—ñ –¥–∞–Ω–∏—Ö
  if (!camper) {
    return <ErrorBlock message={TEXTS.errors.notFound} onRetry={handleRetry} />;
  }

  return (
    <section>
      <h1>{camper.name}</h1>
      <p>
        ‚≠ê {camper.rating} ({camper.reviews.length}) | üìç {camper.location}
      </p>
      <h2>‚Ç¨{camper.price.toFixed(2)}</h2>

      {/* Gallery */}
      <CamperGallery camper={camper} />

      {/* Description */}
      <p>{camper.description}</p>

      {/* Main Content Layout */}
      <div>
        {/* Left Column - Tabs Content */}
        <div>
          {/* Tab Navigation */}
          <div>
            <button onClick={() => setActiveTab('features')}>{TEXTS.camper.tabs.features}</button>

            <button onClick={() => setActiveTab('reviews')}>{TEXTS.camper.tabs.reviews}</button>
          </div>

          {/* Tab Content */}
          <div>
            {activeTab === 'features' && <CamperFeatures camper={camper} />}
            {activeTab === 'reviews' && <CamperReviews camper={camper} />}
          </div>
        </div>

        {/* Right Column - Booking Form */}
        <div>
          <BookingForm camperName={camper.name} />
        </div>
      </div>
    </section>
  );
};

export default CamperDetailsPage;
